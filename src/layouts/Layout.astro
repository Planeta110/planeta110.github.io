---
const { title, lang } = Astro.props;
import "../global.css";
import Nav from "../components/nav.astro";
import { ClientRouter } from "astro:transitions";
import ThemeClient from "../components/main/ThemeScript";
---

<!doctype html>
<html lang={lang.code}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title} | 2025</title>
    <ClientRouter />

    <!-- Open Graph (para Facebook, Discord, etc.) -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://planeta110.github.io/" />
    <meta property="og:title" content="Planeta110 | 2025" />
    <meta
      property="og:description"
      content="Bienvenido al portafolio de Planeta110, un desarrollador web apasionado por crear experiencias digitales modernas, funcionales y atractivas."
    />
    <meta property="og:image" content="https://planeta110.github.io/preview.png" />
    <meta property="og:site_name" content="planeta110" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Planeta110 | 2025" />
    <meta
      name="twitter:description"
      content="Bienvenido al portafolio de Planeta110, un desarrollador web apasionado por crear experiencias digitales modernas, funcionales y atractivas."
    />
    <meta name="twitter:image" content="https://planeta110.github.io/preview.png" />
    <meta name="twitter:site" content="https://planeta110.github.io/" />

    <!-- Tema en navegadores mÃ³viles -->
    <meta name="theme-color" content="#0d0d0d" />
  </head>
  <body
    class="transition-colors duration-300 h-full w-full dark:text-white text-black font-poppins dark:bg-gradient-to-r dark:from-blue-900 dark:to-slate-800 bg-gradient-to-r from-slate-100 to-slate-300"
  >
    <Nav lang={lang} />
    <ThemeClient client:load />
    <slot />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>

<script is:inline>
  const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
  const savedTheme = localStorage.getItem("theme");

  // Si hay un tema guardado, lo aplica; si no, se ajusta al tema del sistema y lo guarda
  if (savedTheme === "dark") {
    document.documentElement.classList.add("dark");
  } else if (savedTheme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    // Si no hay preferencia guardada, ajusta al sistema y guarda la preferencia
    if (prefersDark) {
      document.documentElement.classList.add("dark");
      localStorage.setItem("theme", "dark");
    } else {
      document.documentElement.classList.remove("dark");
      localStorage.setItem("theme", "light");
    }
  }

  // Funciones para cambiar el tema manualmente
  function setLightMode() {
    localStorage.setItem("theme", "light");
    document.documentElement.classList.remove("dark");
  }

  function setDarkMode() {
    localStorage.setItem("theme", "dark");
    document.documentElement.classList.add("dark");
  }

  function setSystemMode() {
    localStorage.removeItem("theme");
    const prefersDark = window.matchMedia(
      "(prefers-color-scheme: dark)"
    ).matches;
    if (prefersDark) {
      document.documentElement.classList.add("dark");
      localStorage.setItem("theme", "dark");
    } else {
      document.documentElement.classList.remove("dark");
      localStorage.setItem("theme", "light");
    }
  }
</script>
